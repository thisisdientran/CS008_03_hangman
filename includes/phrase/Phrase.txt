//
// Created by Dave R. Smith on 9/5/24.
//

#include "Phrase.h"
#include <sstream>

void Phrase::setPhrase(const std::string& phrase)
{
    // _phrase.clear();
    // this -> _phrase = split(phrase);
}

std::vector<Word> Phrase::split(const std::string& word)
{
    std::stringstream s(word);
    std::vector<Word> words;
    std::string next;

    while(s >> next)
        words.emplace_back(next);

    return words;
}

Phrase::Phrase() : Phrase("")
{

}

Phrase::Phrase(const std::string &phrase)
{
    setPhrase(phrase);
}

std::string Phrase::toString() const
{
    std::string ret;
        std::cout << "testing phrase 0" << _phrase.size();
        // std::cout << "testing phrase 1" << _phrase.at(0).toString() << std::endl;
    for(int i=0; i<_phrase.size(); ++i)
    {
        ret += _phrase.at(i).toString();
        if(i<_phrase.size() - 1)
            ret += " ";
        std::cout << "testing phrase 2" << ret << std::endl;
    }
    std::cout << "testing phrase 3" << ret << std::endl;
    return ret;
}

// <HELLO>, <WORD>

// std::string Word::toString() const {
//     std::string word;
//     for (int i = 0; i < _word.size(); i++)
//     {
//         word.push_back(_word.at(i).getLetter());
//         //i < 11 => string word.push("Hello World")
//         //this convert vector<Letter> of _word into a string
//     }
//     return word;
// }

const std::vector<Word> &Phrase::getPhrase() const
{
    return _phrase;
}

